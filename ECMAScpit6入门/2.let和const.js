//所声明的变量，只在let命令所在的代码块内有效

/***一. let命令*****/

//1.for循环计数器
var a = [];
for (var i = 0; i < 10; i++) {
  a[i] = function () {
    print('var '+i);
    //i指向的就是全局的i。也就是说，所有数组a的成员里面的i，指向的都是同一个i
  };
}
a[6](); // 10

var a = [];
for (let i = 0; i < 10; i++) {
  a[i] = function () {
    print('let '+i);
    //变量i是let声明的，当前的i只在本轮循环有效，所以每一次循环的i其实都是一个新的变量，所以最后输出的是6
  };
}
a[6](); // 6


/*** 二.块级作用域和函数声明*****/
//ES6 规定，块级作用域之中，函数声明语句的行为类似于let，在块级作用域之外不可引用。
//但考虑到环境导致的行为差异太大，应该避免在块级作用域内声明函数。
//如果确实需要，也应该写成函数表达式，而不是函数声明语句。
//let a = function(){}



/***三.const命令 */
//const声明一个只读的常量
//const的作用域与let命令相同：只在声明所在的块级作用域内有效。
//对于const来说，只声明不赋值，就会报错。


//es6 声明变量的6种方法
//var, function , let, const, import ,class

/**四.顶层对象的属性 */
//顶层对象，在浏览器环境指的是window对象，在 Node 指的是global对象

